{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ViewCount.tsx"],"sourcesContent":["// components/ViewCount.tsx\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nexport default function ViewCount() {\n  const [viewCount, setViewCount] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchViewCount() {\n      try {\n        const response = await fetch(\"http://localhost:7071/api/queryTable\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch view count.\");\n        }\n        const data = await response.text();\n        // Extract the actual count from the response\n        const countMatch = data.match(/RowKey: (\\d+)/);\n        const count = countMatch ? countMatch[1] : \"N/A\";\n        setViewCount(count);\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError(\"An unknown error occurred\");\n        }\n        console.error(\"Error fetching view counts\", err);\n      }\n    }\n    fetchViewCount();\n  }, []);\n\n  if (error) {\n    return <span>Error: {error}</span>;\n  }\n\n  return <span>{viewCount ? viewCount : \"Loading...\"}</span>;\n}\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;;AAC3B;;;AAIe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,6CAA6C;gBAC7C,MAAM,aAAa,KAAK,KAAK,CAAC;gBAC9B,MAAM,QAAQ,aAAa,UAAU,CAAC,EAAE,GAAG;gBAC3C,aAAa;YACf,EAAE,OAAO,KAAK;gBACZ,IAAI,eAAe,OAAO;oBACxB,SAAS,IAAI,OAAO;gBACtB,OAAO;oBACL,SAAS;gBACX;gBACA,QAAQ,KAAK,CAAC,8BAA8B;YAC9C;QACF;QACA;IACF,GAAG,EAAE;IAEL,IAAI,OAAO;QACT,qBAAO,wPAAC;;gBAAK;gBAAQ;;;;;;;IACvB;IAEA,qBAAO,wPAAC;kBAAM,YAAY,YAAY;;;;;;AACxC"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}